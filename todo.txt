Planned changes:

Optimization:
* finish up the gradient methods
* optimize away function evaluations
* port the CRF learning to the the new optimzation framework

CRFs:
* Update the "marginal" factor concepts to work with CRFs as well
* Update the table_factor class to work with CRFs
* Implement John Lafferty's original paper
* Update the CRF factor graph to use bipartite_graph
* Update the CRF parameter learning
* Update the CRF structure learning
* Update other factor classes to CRF: softmax, Gaussian, hybrid

Loopy inference:
* Use the updated factor_graph in standard methods
* Eliminate bethe_bp
* Update the serial splash BP to the new factor_graph
* Update the parallel splash BP to the new factor_graph

C++11 port:
* iterator pairs
* foreach
* smart pointers
* bind, function
* iterators?
* threads

Cruft removal:
* forward_range
* range algorithms
* operator std::string
* parallel unfriendly optimizations

Other pre-release cleanups:
* templatize and cleanup factors (is_marginal, arg_vetor, etc.)
* convert to Eigen
* domain template, assignments
* variables by value
* trailing underscores for member vars
* rename hugin and shafer_shenoy
* models: markov networks, decomposable

Post-release:
* continued work on Python bindings
* change many asserts to exceptions
* drop dependence on Boost to the extent possible
* optimize performance (speed + memory)
  - factor operations
   - make sure triangulation does not construct properties
* consider expression templates
* d-separation tests
* standardize vertex vs node in graphical models
* bayesian_network modifiers - check add_factor
* flatten, relative entropy for decomposable
* cleanups throughout
* simplify the storage format of vector datasets
* strengthen the ordering of combine operations
* is_marginal trait
* more examples: viterbi algorithm
* test on all major platforms and compilers
